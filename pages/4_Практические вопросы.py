import streamlit as st
from PIL import Image
import os.path

path_to_image= os.path.join(os.path.dirname(__file__), './images', 'fig3.jpg')

menu = st.sidebar.radio('***',
    (
    'Первоначальное предположение для оптимизации','Поиск прямых'
     )
)
if menu =='Первоначальное предположение для оптимизации':

    st.markdown(r'''
    ### Первоначальное предположение для оптимизации
    Задача оптимизации неявного отслеживания ударных волн является невыпуклой, и поэтому начальное приближение для SQP-решателя имеет решающее значение для получения хорошего решения. В методе линий, где неявное отслеживание ударных волн выполняется на каждом временном шаге, очевидной идеей для начального приближения является сходящаяся сетка и решение за предыдущий момент времени $t_n$.

    На практике это слишком далеко для достижения хороших свойств сходимости, за исключением непомерно малого выбора временного шага Δt. Вместо этого мы используем начальное приближение, в котором мы перемещаем каждый узел на поверхности разрыва по сравнению с предыдущим временем на мгновенную скорость ударной волны, определяемой условиями Рэнкина-Гюгонио (рис). 
    

    ''')
    st.image(Image.open(path_to_image),use_column_width = True,caption='Рис. Ударные узлы (слева), подверженные влиянию мгновенной скорости удара (посередине), и сглаженная сетка (справа).')
    
    st.markdown(r'''
    Остальные узлы обновляются с использованием стандартного сглаживания сетки на основе оптимизации с использованием меры искажения сетки высокого порядка 
    $ r^{msh}_K : \mathcal{W} \mapsto \mathbb{R}$

    $$r^K_{msh}: \mathcal{D} \mapsto \int_K (\dfrac{||\nabla_X \mathcal(D)||^2_F}{d(det \nabla_X \mathcal{D})^{2/d}_+})^2 dv $$

    
    Это обеспечивает хорошее первоначальное приближение для сетки, выровненной по уданым  волнам, для каждого этапа задачи оптимизации. Однако смещение этих узлов волны может привести к запутанной сетке (рис - середина). Модифицируем меру искажения сетки, где детерминант матрицы Якоби $( det \nabla_X \mathcal{D} )$ упорядочен, чтобы процедура оптимизации могла восстанавливаться после первоначально неверных конфигураций.


    Для первоначального приближения решения мы используем приближенное физическое решение $(U)$ с предыдущего временного шага. Однако, поскольку мы применили нашу дискретизацию DG к преобразованному эталонному закону сохранения, мы решаем для эталонного решения $(U_X)$. Следовательно, чтобы использовать физическое решение в момент времени $t_n$ в качестве начального приближения для времени $t_{n + 1}$, мы умножаем его на отношение детерминанта матрицы Якоби начального приближения для отображения в момент времени $t_{n + 1}$ (адвекция, основанная на условиях Рэнкина-Гюгонио и сглаживании) к детерминанту матрицы Якоби сходящегося отображения в момент времени $t_n$ . Точнее, первоначальное предположение для $i$-й стадии Рунге-Кутты в физическом пространстве, обозначаемое $\check{U}_h$ , получается путем постоянной экстраполяции физического состояния в момент времени t

    $\check{U}_h(x,t+c_i\Delta t):= U_h(x,t) = g_h(X,t)^{-1}U_{X_h}(X,t) $

    Пусть $\~{\Im} \in \mathcal{W_h}$ - отображение конфигурации, полученной с помощью процедуры Рэнкина-Гюгонио, и связанного с ней сглаживания, тогда первоначальное приближение для $i$-го этапа Рунге-Кутты в эталонной области, обозначаемое $\check{U}_{X_h}$ , равно 

    $\check{U}_{X_h}(X,t+c_i\Delta t) := \check{g}(X,t+c_i\Delta t) \check{U}_{X}(x,t+c_i\Delta t) = \dfrac{\check{g}(X,t+c_i\Delta t)}{{g}(X,t)} U_{X_h}(X,t) $ 


    ''')

if menu == 'Поиск прямых':
    
    st.markdown(r'''
    В стационарном случае начальная сетка генерируется независимо от априори неизвестного местоположения ударной волны и, как таковая, может начинаться довольно далеко от выравнивания с ударной волной. Коллапсы элементов требовались для удаления мелких и плохо сформированных элементов, которые возникали между итерациями, когда грубая сетка высокого порядка деформировалась, чтобы выровняться с ударом. Из-за этого мы выбрали параметр длины шага $\alpha_{k+1}$ из (49), основанный на процедуре поиска линии обратного отслеживания, основанной на метрической функции $l_1$ в нашей предыдущей работе. 
    
    В этой работе мы просто берем $\alpha_k = 1$ и не требуем каких-либо изменений топологии сетки. Это возможно, потому что мы можем построить высококачественные исходные предположения для задачи оптимизации в нестационарном случае, которые уже содержат информацию о толчке (в отличие от стационарного случая)
    ''')


